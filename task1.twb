<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='daikibo-telemetry-data' inline='true' name='federated.1jmdb1b08d45b9199st5p0ud5vc8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daikibo-telemetry-data' name='semistructpassivestore-direct.0v54g7i1jgl0yr11ugw3t1fa1wrc'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/DEEPAK JADHAV/Downloads/daikibo-telemetry-data.json' filename='daikibo-telemetry-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[daikibo-telemetry-data.json]'>
                  <map key='data' value='true' />
                  <map key='location' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0v54g7i1jgl0yr11ugw3t1fa1wrc' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[daikibo-telemetry-data.json].[Document Index (generated)]' />
          <map key='[area]' value='[daikibo-telemetry-data.json].[location.area]' />
          <map key='[city]' value='[daikibo-telemetry-data.json].[location.city]' />
          <map key='[country]' value='[daikibo-telemetry-data.json].[location.country]' />
          <map key='[deviceID]' value='[daikibo-telemetry-data.json].[deviceID]' />
          <map key='[deviceType]' value='[daikibo-telemetry-data.json].[deviceType]' />
          <map key='[factory]' value='[daikibo-telemetry-data.json].[location.factory]' />
          <map key='[section]' value='[daikibo-telemetry-data.json].[location.section]' />
          <map key='[status]' value='[daikibo-telemetry-data.json].[data.status]' />
          <map key='[temperature]' value='[daikibo-telemetry-data.json].[data.temperature]' />
          <map key='[timestamp]' value='[daikibo-telemetry-data.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.temperature</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceType]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.area</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.factory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[factory]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.factory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[section]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unhealthy' datatype='integer' name='[Calculation_622622714184331264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='If [status] = &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.area</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceType</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.factory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Section' datatype='string' name='[section]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.section</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>data.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.temperature</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='real' name='[timestamp]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <folders-common>
        <folder name='Daikibo-Telemetry-Data'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[deviceID]' type='field' />
          <folder-item name='[deviceType]' type='field' />
        </folder>
        <folder name='Data'>
          <folder-item name='[status]' type='field' />
        </folder>
        <folder name='Location'>
          <folder-item name='[area]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[factory]' type='field' />
          <folder-item name='[section]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/DEEPAK~1/AppData/Local/Temp/TableauTemp/#TableauTemp_057mi1a0lx8k7x1gzcj3r1qi998z.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/08/2025 06:21:49 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[area]' value='[Extract].[location.area]' />
            <map key='[city]' value='[Extract].[location.city]' />
            <map key='[country]' value='[Extract].[location.country]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[deviceType]' value='[Extract].[deviceType]' />
            <map key='[factory]' value='[Extract].[location.factory]' />
            <map key='[section]' value='[Extract].[location.section]' />
            <map key='[status]' value='[Extract].[data.status]' />
            <map key='[temperature]' value='[Extract].[data.temperature]' />
            <map key='[timestamp]' value='[Extract].[timestamp]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160704</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.status</remote-alias>
              <ordinal>1</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.temperature</remote-alias>
              <ordinal>2</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>3</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceType</remote-alias>
              <ordinal>4</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.area</remote-alias>
              <ordinal>5</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.city</remote-alias>
              <ordinal>6</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.country</remote-alias>
              <ordinal>7</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.factory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[factory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.factory</remote-alias>
              <ordinal>8</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.section</remote-name>
              <remote-type>129</remote-type>
              <local-name>[section]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.section</remote-alias>
              <ordinal>9</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>10</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7530</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Document Index (generated)' />
        <field-sort-custom-order field='status' />
        <field-sort-custom-order field='temperature' />
        <field-sort-custom-order field='deviceID' />
        <field-sort-custom-order field='deviceType' />
        <field-sort-custom-order field='area' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='factory' />
        <field-sort-custom-order field='section' />
        <field-sort-custom-order field='timestamp' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='daikibo-telemetry-data.json' id='daikibo-telemetry-data.json_881CFFD93B4C474FA9A7BFA1082EBA2A'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0v54g7i1jgl0yr11ugw3t1fa1wrc' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Bold'>Down Time per Factory</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.1jmdb1b08d45b9199st5p0ud5vc8' />
          </datasources>
          <datasource-dependencies datasource='federated.1jmdb1b08d45b9199st5p0ud5vc8'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_622622714184331264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='If [status] = &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[factory]' derivation='None' name='[none:factory:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_622622714184331264]' derivation='Sum' name='[sum:Calculation_622622714184331264:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1jmdb1b08d45b9199st5p0ud5vc8].[none:factory:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1jmdb1b08d45b9199st5p0ud5vc8].[sum:Calculation_622622714184331264:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jmdb1b08d45b9199st5p0ud5vc8].[sum:Calculation_622622714184331264:qk]</rows>
        <cols>[federated.1jmdb1b08d45b9199st5p0ud5vc8].[none:factory:nk]</cols>
      </table>
      <simple-id uuid='{009DD374-C9C7-43ED-BD80-8C25F40B1B3D}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Bold'>Down Time per Device Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.1jmdb1b08d45b9199st5p0ud5vc8' />
          </datasources>
          <datasource-dependencies datasource='federated.1jmdb1b08d45b9199st5p0ud5vc8'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_622622714184331264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='If [status] = &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>deviceType</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[deviceType]' derivation='None' name='[none:deviceType:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_622622714184331264]' derivation='Sum' name='[sum:Calculation_622622714184331264:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jmdb1b08d45b9199st5p0ud5vc8].[sum:Calculation_622622714184331264:qk]</rows>
        <cols>[federated.1jmdb1b08d45b9199st5p0ud5vc8].[none:deviceType:nk]</cols>
      </table>
      <simple-id uuid='{C28AA2CE-0262-428D-B0D9-7C05487EF33E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1060' maxwidth='650' minheight='460' minwidth='520' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97106' id='3' name='Sheet 1' w='47077' x='1231' y='1447'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='97106' id='5' name='Sheet 2' w='50461' x='48308' y='1447'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='7' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97106' id='6' param='vert' type-v2='layout-flow' w='97538' x='1231' y='1447'>
                <zone fixed-size='280' h='97106' id='3' is-fixed='true' name='Sheet 1' w='47077' x='1231' y='1447'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97106' id='5' is-fixed='true' name='Sheet 2' w='50461' x='48308' y='1447'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{92C7B5D2-8795-4789-BC8E-A2AF5B1D1B76}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1D12150B-2064-46B3-9AA5-53EF7E51AEE4}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AB29127C-E098-4210-85FE-C7EFBE725330}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{EF333FA3-E376-4956-B4D0-B9D24CB00082}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAT9klEQVR4nO3d6W8c933H8ffsfV+8T5GiqJOyLNkSJcuyHB91bccN6iZIgOZB2gcF+qQP
      ijxqH1RA/4I2DwIEfVKkSNukQIo2iWHYkiUfkiySoiRK4n2fy2PJXe49OzN9QFuRbMuk0uFS
      1nxfT7RLauf7G2I++5tjd76KYRgGQliUbacHIMROkgAIS5MACEuTAAhLkwAIS3Ps9ADE426V
      f/2nX2CLhdn37FmOH2hC+Yr/VUyvkFC91EZ9X/Fblavv/oZPbo1Qt3sff/zGnxDzbve4t0Zm
      ALGJAkVnIz94+zVuX3yHlUyW7suX6B2cZml2jLVsidmJcZKJOebX8iTmRrjwwccksgXudH/C
      bCILODn52p9SFYrw1ttvkp4fJlPUGRsdJT7Vz+VPLnNreAZdy9P90Qf0Dk5TrnPzMgOILXH6
      I1T6S1z93X9zbXCK/PJ7vPW9M2Rn8yT6ezl1KMhQRuHmeA8vvPQK6/3v8bNfdRFrmeMf/vp7
      9y3JxuJILzM5neGeu+zxzVDc+x1GL7/L6m0H792ZR0tfoOLv/5Hm4PavlwRAbEotZJkbvctM
      PsqxGgfPnH2DE7tj+D3wi5//G9Ejr+N1TIFhYBgKLpcTXS9x4Lk3eKuz7cGFKQpHTpzgZz/9
      dw69/Zcot3+Fy+VEQUHX4JmXvsPJliBhT3nWzX7u3Llz5SklvpnslNYXmU7qvPbGq7S17SY5
      PchCUqd17x6iLi/7Og4QDoaIVjVweFeIm32jtDxzlmBqnJwrSm1s4608EApRUVFBIZvmzugc
      L519jsWBK/THdTpPn+X4iaOsjd0mnjFoaqjDUYYddEU+CiHKLTE3RlKJ0lIXIbk4gyPSRMC1
      M2PZsQDouo7NJsfgYmeV9Rjg/qxpmoaifNUJNSHKx5QAGEaJtZU1dJuDcDiMVkiTLUI4HERX
      c6TSBUKRMHYFSqUSsBEA2fsSO82UAOjZaT6+OkNTSyVet0H3tVs47CWq9xwlPXWHnKbjjLXx
      7IFGnE7nvdfd/1iInWDKTri6mkDzeQkEo7C+QsW+Ixw/fpzM3CB6uJGTp89AJm5GKSFMZcoM
      4Ko5xPOedeamx1hwedGCBoahAQ40TQcM+MoL6ELsLFNmgOTiNDd6e5lbyRNt2U166BrnL16l
      ck8Hgfwc7/z2HTxVu8woJYSpduw0qKqqcgwgdpyciBeWJgEQliYBEJYmARCWJgEQliYBEJYm
      ARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQlib3BhWPtXgijW7i
      lxajQS8e1+83ewmAeKz9+KfvkcoUTFve3/3weToPNt57LrtAwtIkAMLSJADC0iQAwtIkAMLS
      JADC0iQAwtJMC0AhvcTVa32UDJ2x291c/LiLjKqzNDXI+fOXWFw371yuEGYxJQCGoTM2NEg6
      XUBNzRI3qji2N8bI4Ahj8TynTx1mZGDYjFJCmMqUK8HphXGUqjZihQWK2SKx6ip8IQdM9uAO
      78Lji+G2j2EYhnSIEY/G5G2kVCpRLBbvPTclAAsLC0wspZifXCZUe5yltSVqNBXD10A+sUxm
      3U2u5ENRFOkQIx6NyX3kHA4HLtfvW1KaEoD2o6dpR2NhZomqhhq8I7fom7Fx8tl9ZJcm6Ood
      49iJ42aUEsJUJn4Yzk5tYy0ADe1HaPjsp+GaVl6saTWvjBAmktOgwtIkAMLSJADC0iQAwtIk
      AMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC
      0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtJMuTluZmmKKzcHsbmC
      nOh8mpGeT1nM6Bw7/Tzp8ZsMTi+z5+hp2mqCZpQTwjSmzACeaB0vvniWKr9Bam4KrXo/Z04c
      YG6on0U1wMuvnCUxPWZGKSFMZcoMYLPZ6b1ynpyzkloF/AEvDpcdQx3BGWrC7vBgU1TpECMe
      3TehQ8za0jyVuw6QiM+Qs0VZHB1GCZVwVrSRiU8wNryOao9Khxjx6B6HDjEb79TKQ8fiD/iJ
      T84SrmmloaGGkMfOYsbGvpY6ipUuJufXeLpDmmSIx8+WAlDMLvC7X18k0LyHU51HCbgffJnL
      H2H/wci955HqJj5/5g1VsD9UYdqAhTDTlg6CXb5aXn7tOeZvXeQn//wTrgzEt3tcQpTFlmaA
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
